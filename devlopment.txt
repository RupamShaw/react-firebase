playlist start from first create-rect-app 
https://www.youtube.com/watch?v=bqckLTOwdwg&index=2&list=PLbG4OyfwIxjFKJE_ZVZxsSt1ESc9S7kFb How to Create Custom React Components
https://coderjourney.com/tutorials/how-to-create-custom-react-components/
https://github.com/martijnversluis/ChordSheetJS 
npm install chordsheetjs 
 dangerouslySetInnerHTML is from react to give rawHTML


 -----------------part 2
npm test this will be watcher 
for running one time  > CI=tru npm test

enzyme by airbnb 
jest by facebook

http://airbnb.io/enzyme/docs/installation/react-16.html
npm i --save-dev enzyme enzyme-adapter-react-16 
npm i --save-dev react-test-renderer@16

cp app.test.js chordEditor.test.js
import { shallow } from 'enzyme';

describe('<ChordEditor />', () => {
  it('renders an editor area', () => {
    const editor = shallow(<ChordEditor />);
    expect(editor.find('textarea').length).toEqual(1);
  });

  did  test via enzyme 

  ---------------------part 3
  refactoring code using state and props
  "test": "react-scripts test --env=jsdom --setupTestFrameworkScriptFile=raf/polyfill",
------------------part 4---route
yarn react-router-dom


-----part 5 --Integrate React with Firebase ---
https://coderjourney.com/tutorials/how-to-integrate-react-with-firebase/
https://www.youtube.com/watch?v=vmLaZafaw9E&index=6&list=PLbG4OyfwIxjFKJE_ZVZxsSt1ESc9S7kFb How to Integrate React with Firebase 
 npm i re-base firebase

in base.js
const app = firebase.initializeApp(config);
const base = Rebase.createClass(app.database())
const facebookProvider = new firebase.auth.FacebookAuthProvider()

in componentwillmount this.songsRef = base.syncState('songs', {
          context: this,
          state: 'songs'
        });

addsong() in App.js


If you load the application to the /songs route, you’ll no longer see anything, so we need to create a way 
for us to add songs. Let’s create 
an  addSong method on App for now that we can manually use from the console.

With this new method in place you can now use the React dev tools in Chrome or Firefox to create a 
new song by finding and clicking the App component and then running the following in the javascript 
console: 

$r.addSong("Test Song")


===============part 6 style 
yarn add @blueprintjs react-addons-css-transition-group
in index.js
import 'normalize.css/normalize.css';
import '@blueprintjs/core/dist/blueprint.css';

header.js with navigation

/songs made SongList separate component

flex style used for compression depending on screensize view changes

App.js
in render() removed wrapper style and added style={{maxWidth: "1160px", margin: "0 auto" }}
main-content style added

ChordEditor.js
import {Breadcrumb} from '@blueprintjs/core'

cleanup package.json